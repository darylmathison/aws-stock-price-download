name: Build and Deploy Java AWS Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_alpacaApiKey: ${{ secrets.ALPACA_API_KEY }}
      TF_VAR_alpacaSecretKey: ${{ secrets.ALPACA_SECRET_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build Lambda JAR with Maven
        run: mvn clean package

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip pip install pathlib

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Import AWS resources with Terraformer
        run: |
          python tools/terraformer_import.py \
            --resources=lambda,iam,s3,cloudwatchevents \
            --output-dir=terraformer-output \
            --terraform-dir=terraform \
            --filters "Name=tag:Environment;Value=staging" \
            --install
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        run: terraform plan -var-file="staging/vars.tfvars"
        working-directory: ./terraform

      - name: Terraform Apply (Deploy Lambda)
        run: terraform apply -var-file="staging/vars.tfvars" -auto-approve
        working-directory: ./terraform